{"version":3,"sources":["classes/HistoricalStockData.js","classes/StockProfile.js","classes/StockStatistics.js","data/accessors/accessorMethods.js","store/actions.js","components/SearchBar/SearchBar.js","containers/Logo/Logo.js","components/Header/Header.js","containers/StockName/StockName.js","components/RangeSelector/RangeBtn.js","components/RangeSelector/RangeSelector.js","components/PerformancePlot/PerformancePlot.js","containers/PriceIndicator/PriceIndicator.js","containers/PriceIndicator/OneItemIndicator.js","containers/PriceIndicator/TwoItemIndicator.js","containers/PriceIndicator/ThreeItemIndicator.js","containers/PriceIndicatorContainer/PriceIndicatorContainer.js","components/StockPerformance/StockPerformance.js","containers/About/Sector.js","containers/About/Industry.js","containers/CompanyDetails/Detail.js","containers/CompanyDetails/CompanyDetails.js","containers/About/About.js","components/PerformancePage/PerformancePage.js","App.js","serviceWorker.js","store/reducer.js","index.js","components/PerformancePage/PerformancePage.module.css","components/SearchBar/SearchBar.module.css","components/Header/Header.module.css"],"names":["HistoricalStockData","values","time_range","getValues","getTimeRange","this","StockProfile","raw_data","getSector","is_empty","data","assetProfile","sector","getIndustry","industry","getNumEmployees","fullTimeEmployees","getWebsite","website","getCity","city","getState","state","getCountry","country","getBusinessSummary","longBusinessSummary","getFullName","price","longName","getInstrumentType","quoteType","getStockSymbol","symbol","StockStatistics","getForecast","financialData","targetMedianPrice","fmt","getForecastLow","targetLowPrice","getPurchaseRecommendation","recommendationKey","getForecastHigh","targetHighPrice","getProfitMargin","profitMargins","getGrossProfits","grossProfits","getGrossMargin","grossMargins","getRevenue","totalRevenue","getRevenueGrowth","revenueGrowth","getTotalDebt","totalDebt","getOperatingCashflow","operatingCashflow","getCurrentOpenPrice","regularMarketOpen","getCurrentOpenPriceHigh","regularMarketDayHigh","getCurrentOpenPriceLow","regularMarketDayLow","getPreviousMarketClose","regularMarketPreviousClose","getBeta","defaultKeyStatistics","beta","getPriceToEarnings","forwardPE","getChartData","range","a","console","log","axios","get","raw_chart","chart","result","length","map","indicators","quote","reduce","agg","quote_arr","concat","open","result_price_arr","timestamp","timestamp_arr","result_timestamp_arr","getStockProfile","raw_profile","getStockStats","raw_stats","actionTypes","UPDATE_SEARCH_TEXT","UPDATE_CHART_DATA","UPDATE_ALL_STOCK_INFO","SearchBar","temp_search_text","props","search_text","style","textAlign","marginLeft","display","position","className","styles","type","data-testid","placeholder","value","onKeyPress","event","key","update","chart_range_used","onChange","setState","target","right","top","cursor","onClick","icon","faSearch","Component","connect","dispatch","range_used","chartPromise","profilePromise","statsPromise","Promise","all","then","results","chart_data","stock_statistics","stock_profile","err","updateValues","Logo","fontSize","color","Header","StockName","stockName","full_name","selected_stock_range","btn_color","backgroundColor","is_selected","boxShadow","label","available_range","RangeSelector","selected_range","Plot","createPlotlyComponent","Plotly","PerformancePlot","y","open_prices","x","time_stamps","model","marker","layout","title","PriceIndicator","indicatorContent","indicatorName","OneItemIndicator","TwoItemIndicator","content","subcontent","ThreeItemIndicator","high","middle","low","open_low","open_high","forecast_low","forecast_high","forecast","volatilityText","open_price","forecastPrice","volatility","p_e","StockPerformance","gross_profit","profit_margin","revenue","revenue_growth","total_debt","operating_cash_flow","Sector","borderRadius","padding","Industry","Detail","marginBottom","CompanyDetails","num_employees","location","About","description","PerformancePage","pageWidth","fullname","topContainer","float","width","marginRight","marginTop","fullWidth","Boolean","window","hostname","match","initialState","store","createStore","action","UPDATE_SHOW_SEARCH_BAR","show_comparison_seach_bar","UPDATE_STOCK_RANGE","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ad8611b0.chunk.js","sourcesContent":["class HistoricalStockData {\n    constructor(values, time_range) {\n        this.values = values;\n        this.time_range = time_range;\n    }\n\n    getValues = () => {\n        return this.values;\n    }\n\n    getTimeRange = () => {\n        return this.time_range;\n    }\n}\n\nexport default HistoricalStockData;","class StockProfile {\n    constructor(raw_data) {\n        this.is_empty = !raw_data;\n        this.raw_data = raw_data;\n    }\n\n    getSector = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.sector;\n    }\n\n    getIndustry = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.industry;\n    }\n\n    getNumEmployees = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.fullTimeEmployees;\n    }\n\n    getWebsite = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.website;\n    }\n\n    getCity = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.city;\n    }\n\n    getState = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.state;\n    }\n\n    getCountry = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.country;\n    }\n\n    getBusinessSummary = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.assetProfile.longBusinessSummary;\n    }\n\n    getFullName = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.price.longName;\n    }\n\n    getInstrumentType = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.price.quoteType;\n    }\n\n    getStockSymbol = () => {\n        if (this.is_empty) return;\n        return this.raw_data.data.price.symbol;\n    }\n}\n\nexport default StockProfile;","class StockStatistics {\n    constructor(raw_data) {\n        this.raw_data = raw_data;\n    }\n\n    getForecast = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.targetMedianPrice.fmt;\n    }\n\n    getForecastLow = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.targetLowPrice.fmt;\n    }\n\n    getPurchaseRecommendation = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.recommendationKey;\n    }\n\n    getForecastHigh = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.targetHighPrice.fmt;\n    }\n\n    getProfitMargin = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.profitMargins.fmt;\n    }\n\n    getGrossProfits = () => {\n        if (!this.raw_data) return;\n        return `$${this.raw_data.data.financialData.grossProfits.fmt}`;\n    }\n\n    getGrossMargin = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.grossMargins.fmt;\n    }\n\n    getRevenue = () => {\n        if (!this.raw_data) return;\n        return `$${this.raw_data.data.financialData.totalRevenue.fmt}`;\n    }\n\n    getRevenueGrowth = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.financialData.revenueGrowth.fmt;\n    }\n\n    getTotalDebt = () => {\n        if (!this.raw_data) return;\n        return `$${this.raw_data.data.financialData.totalDebt.fmt}`;\n    }\n\n    getOperatingCashflow = () => {\n        if (!this.raw_data) return;\n        return `$${this.raw_data.data.financialData.operatingCashflow.fmt}`;\n    }\n\n    getCurrentOpenPrice = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.price.regularMarketOpen.fmt;\n    }\n\n    getCurrentOpenPriceHigh = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.price.regularMarketDayHigh.fmt;\n    }\n\n    getCurrentOpenPriceLow = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.price.regularMarketDayLow.fmt;\n    }\n\n    getPreviousMarketClose = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.price.regularMarketPreviousClose.fmt;\n    }\n\n    getBeta = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.defaultKeyStatistics.beta.fmt;\n    }\n\n    getPriceToEarnings = () => {\n        if (!this.raw_data) return;\n        return this.raw_data.data.defaultKeyStatistics.forwardPE.fmt;\n    }\n}\n\nexport default StockStatistics;","import HistoricalStockData from '../../classes/HistoricalStockData';\nimport StockProfile from '../../classes/StockProfile';\nimport StockStatistics from '../../classes/StockStatistics';\nimport axios from 'axios';\n\nexport const getChartData = async (symbol, range) => {\n    // returns a HistoricalStockData object\n    console.log(\"in get chart\")\n    let raw_chart = await axios.get(`/api/getCharts?symbol=${symbol}&range=${range}`);\n    console.log(raw_chart);\n    let values = [],\n    time_range = [];\n    if (raw_chart.data.chart && raw_chart.data.chart.result.length > 0) {\n        values = raw_chart.data.chart.result\n                    .map(result => {\n                        return result.indicators.quote.reduce((agg, quote_arr) => {\n                            return [].concat(agg, quote_arr.open);\n                        }, []);\n                    })\n                    .reduce((agg, result_price_arr) => {\n                        return [].concat(agg, result_price_arr);\n                    }, []);\n        \n        time_range = raw_chart.data.chart.result\n                    .map(result => {\n                        return result.timestamp.reduce((agg, timestamp_arr) => {\n                            return [].concat(agg, timestamp_arr);\n                        }, []);\n                    })\n                    .reduce((agg, result_timestamp_arr) => {\n                        return [].concat(agg, result_timestamp_arr);\n                    }, []);\n    }\n    return new HistoricalStockData(values, time_range);\n}\n\nexport const getStockProfile = async (symbol) => {\n    // returns StockProfile\n    try {\n        let raw_profile = await axios.get(`/api/stockProfile?symbol=${symbol}`);\n        return new StockProfile(raw_profile);\n    } catch (err) {\n        return new StockProfile();\n    }\n}\n\nexport const getStockStats = async (symbol) => {\n    // returns a StockStats object\n    try {\n        let raw_stats = await axios.get(`/api/stockStatistics?symbol=${symbol}`);\n        return new StockStatistics(raw_stats);\n    } catch (err) {\n        return new StockStatistics();\n    }\n}\n","\nimport { getChartData, getStockProfile, getStockStats } from \"../data/accessors/accessorMethods\";\n\nexport const actionTypes = {\n    UPDATE_SEARCH_TEXT: 'UPDATE_SEARCH_TEXT',\n    UPDATE_CHART_DATA: 'UPDATE_CHART_DATA',\n    UPDATE_ALL_STOCK_INFO: 'UPDATE_ALL_STOCK_INFO'\n}\n\nexport const updateValues =  (search_text, range_used) => {\n    return (dispatch, getState) => {\n        // console.log('updating values');\n        dispatch({type: actionTypes.UPDATE_SEARCH_TEXT, value: search_text});\n        try {\n            const chartPromise = getChartData(search_text, range_used);\n            const profilePromise = getStockProfile(search_text);\n            const statsPromise = getStockStats(search_text);\n            Promise.all([chartPromise, statsPromise, profilePromise]).then(results => {\n                dispatch({type: actionTypes.UPDATE_ALL_STOCK_INFO,\n                    chart_data: results[0],\n                    stock_statistics: results[1],\n                    stock_profile: results[2]\n                    });\n                // console.log(getState());\n            })\n            \n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport const updateChartData = (range_used) => {\n    return (dispatch, getState) => {\n        const symbol = getState().search_text;\n        // console.log(\"update chart data\");\n        getChartData(symbol, range_used).then(data => {\n            // console.log(data);\n            dispatch({type: actionTypes.UPDATE_CHART_DATA,\n                      chart_data: data,\n                      selected_stock_range: range_used\n                    });\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import fontawesome from '@forteawesome/fontawesome';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSearch } from '@fortawesome/fontawesome-free-solid';\nimport { updateValues } from '../../store/actions';\nimport styles from './SearchBar.module.css';\n\nclass SearchBar extends Component {\n    state = {\n        temp_search_text: this.props.search_text\n    }\n\n    render () {\n        return (\n            <div style={{textAlign: \"left\", marginLeft: 48, display: \"inline-block\"}}>\n                <div style={{display: 'inline-block', position: \"relative\"}}>\n                   \n                    <input \n                        className={styles.SearchBar}\n                        type=\"text\"\n                        data-testid=\"search-bar\"\n                        placeholder=\"Search\" \n                        value={this.state.temp_search_text} \n                        onKeyPress={(event) => {\n                            if (this.state.temp_search_text !== \"\" && event.key === \"Enter\") {\n                                this.props.update(this.state.temp_search_text, this.props.chart_range_used);\n                            }\n                        }}\n                        onChange={(event) => this.setState({temp_search_text: event.target.value})} />\n                        <FontAwesomeIcon \n                            style={{position: \"absolute\", right: 12, top: 16, cursor: \"pointer\"}} \n                            onClick={() => {\n                                // console.log(`clicked icon: ${this.state.temp_search_text}`)\n                                this.props.update(this.state.temp_search_text, this.props.chart_range_used)\n                            }}\n                            icon={faSearch}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        search_text: state.search_text,\n        chart_range_used: state.range\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (symbol, range_used) => dispatch(updateValues(symbol, range_used))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);","import React from 'react';\n\nconst Logo = (props) => {\n    return (\n        <div style={{textAlign: \"left\", display: \"inline-block\", fontSize: 24, color: \"#243B53\" }}>\n            <b>Simple Stock Comparsion</b>\n        </div>\n    )\n}\n\nexport default Logo;","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Logo from '../../containers/Logo/Logo';\nimport styles from './Header.module.css';\n\nclass Header extends Component {\n    render () {\n        return (\n            <div className={styles.Header}>\n                <Logo />\n                <SearchBar />\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Fragment } from 'react';\nimport \"./StockName.css\";\n\nconst StockName = (props) => {\n    let stockName = \"\";\n    if (props.symbol) {\n        if (props.full_name) {\n            stockName = <Fragment>\n                            <h2 className=\"symbol\" data-testid=\"stock-symbol\">{props.symbol}</h2>\n                            <h3 className=\"name\" data-testid=\"stock-fullname\">{props.full_name}</h3>\n                        </Fragment>;\n        } else {\n            stockName = <h2 data-testid=\"stock-symbol\">{props.symbol}</h2>\n        }\n    }\n    return (\n        <div>\n            { stockName }\n        </div>\n    );\n};\n\nexport default StockName;","import React from 'react';\nimport './RangeBtn.css';\nimport { updateChartData } from '../../store/actions';\nimport { connect } from \"react-redux\";\n\nconst RangeBtn = (props) => {\n    let btn_color = {backgroundColor: \"white\"};\n    if (props.is_selected) {\n        btn_color = {backgroundColor: \"#9FB3C8\", boxShadow: \"2px 2px 2px #627D98\"};\n    }\n    return (\n        <button style={btn_color} \n                className=\"RangeBtn\"\n                onClick={() => props.update(props.label)}>\n            {props.label}\n        </button>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (range) => dispatch(updateChartData(range))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(RangeBtn);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RangeBtn from './RangeBtn';\nimport \"./RangeSelector.css\";\n\nconst available_range = ['1d', '5d', '6mo', '1y']\n\nfunction mapStateToProps(state) {\n    return {\n        selected_range: state.selected_stock_range\n    };\n}\n\n\nclass RangeSelector extends Component {\n    render() {\n        return (\n            <div className=\"RangeSelector\">\n                {available_range.map(range => {\n                    return  <RangeBtn key={range}\n                                      label={range} \n                                      is_selected={this.props.selected_range === range}\n                                      />\n                })}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(RangeSelector);","import React, { Component, Fragment } from 'react';\nimport Plotly from \"plotly.js\"\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport { connect } from 'react-redux';\nimport RangeSelector from '../RangeSelector/RangeSelector';\nconst Plot = createPlotlyComponent(Plotly);\n\n\nclass PerformancePlot extends Component {\n    render() {\n        return (\n            <Fragment>\n                <RangeSelector />\n                <div>\n                <Plot\n                    data={[\n                        {\n                            y: this.props.open_prices,\n                            x: this.props.time_stamps,\n                            type: 'scatter',\n                            model: 'lines',\n                            marker: {\n                                color: '#3EBD93'\n                            }\n                        }\n                    ]}\n                    layout={{title: \"Open Price\"}}\n                />\n                </div>\n                \n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"in performance plot\");\n    console.log(state);\n    return {\n        open_prices: state.chart_data.getValues(),\n        time_stamps: state.chart_data.getTimeRange()\n    }\n}\n\nexport default connect(mapStateToProps)(PerformancePlot);","import React from 'react';\nimport './PriceIndicator.css';\n\nconst PriceIndicator = (props) => {\n    return (\n        <div className=\"price-indicator-container\">\n            <div className=\"content-container\">{props.indicatorContent}</div>\n            <div className=\"name-container\">{props.indicatorName}</div>\n        </div>\n    );\n};\n\nexport default PriceIndicator;","import React, { Fragment } from 'react';\nimport './PriceIndicator.css';\n\nconst OneItemIndicator = (props) => {\n    return (\n        <Fragment>\n            <h3 className=\"main-content one-value-container\">{props.value}</h3>\n        </Fragment>\n    );\n};\n\nexport default OneItemIndicator;","import React, { Fragment } from 'react';\nimport './PriceIndicator.css';\n\nconst TwoItemIndicator = (props) => {\n    return (\n        <Fragment>\n            <h3 className=\"main-content\">{props.content}</h3>\n            <div className=\"small-cotent\">{ props.subcontent }</div>\n        </Fragment>\n    );\n};\n\nexport default TwoItemIndicator;","import React, { Fragment } from 'react';\nimport './PriceIndicator.css';\n\nconst ThreeItemIndicator = (props) => {\n    return (\n        <Fragment>\n            <div className=\"small-content\">{`H ${props.high}`}</div>\n            <h3 className=\"main-content\">{props.middle}</h3>\n            <div className=\"small-content\">{`L ${props.low}`}</div>\n        </Fragment>\n    );\n};\n\nexport default ThreeItemIndicator;","import React from 'react';\nimport PriceIndicator from '../PriceIndicator/PriceIndicator';\nimport OneItemIndicator from '../PriceIndicator/OneItemIndicator';\nimport TwoItemIndicator from '../PriceIndicator/TwoItemIndicator';\nimport ThreeItemIndicator from '../PriceIndicator/ThreeItemIndicator';\nimport { connect } from 'react-redux';\nimport './PriceIndicatorContainer.css';\n\n\nconst PriceIndicatorContainer = (props) => {\n    let volatilityText = \"\";\n    if (props.beta < 1) {\n        volatilityText = \"Low\";\n    } else if (props.beta >= 1 && props.beta <= 1.25) {\n        volatilityText = \"Avg\"\n    } else if (props.beta > 1.25) {\n        volatilityText = \"High\"\n    }\n\n    const open_price = <ThreeItemIndicator low={props.open_low} middle={props.open} high={props.open_high} />\n    const forecastPrice = <ThreeItemIndicator low={props.forecast_low} middle={props.forecast} high={props.forecast_high} />\n    const volatility = <TwoItemIndicator content={volatilityText} subcontent={`Beta: ${props.beta}`} />\n    const p_e = <OneItemIndicator value={props.forwardPE} />\n\n    return (\n        <div className=\"pic-container\">\n            <PriceIndicator indicatorContent={open_price} indicatorName=\"Open\" />\n            <PriceIndicator indicatorContent={forecastPrice} indicatorName=\"Forecast\" />\n            <PriceIndicator indicatorContent={p_e} indicatorName=\"P/E\" />\n            <PriceIndicator indicatorContent={volatility} indicatorName=\"Volatility\" />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state,\n        open_low: state.stock_statistics.getCurrentOpenPriceLow(),\n        open_high: state.stock_statistics.getCurrentOpenPriceHigh(),\n        open: state.stock_statistics.getCurrentOpenPrice(),\n        forecast_low: state.stock_statistics.getForecastLow(),\n        forecast_high: state.stock_statistics.getForecastHigh(),\n        forecast: state.stock_statistics.getForecast(),\n        beta: state.stock_statistics.getBeta(),\n        forwardPE: state.stock_statistics.getPriceToEarnings()\n    }\n}\n\nexport default connect(mapStateToProps)(PriceIndicatorContainer);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport './StockPerformance.css';\n\nclass StockPerformance extends Component {\n    render () {\n        return (\n            <Fragment>\n                <h2 className=\"company-title\">Company Performance</h2>\n                <table>\n                    <tbody>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Gross Profit</td><td className=\"stat\">{this.props.gross_profit}</td>\n                        </tr>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Profit Margin</td><td className=\"stat\">{this.props.profit_margin}</td>\n                        </tr>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Revenue</td><td className=\"stat\">{this.props.revenue}</td>\n                        </tr>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Revenue Growth</td><td className=\"stat\">{this.props.revenue_growth}</td>\n                        </tr>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Total Debt</td><td className=\"stat\">{this.props.total_debt}</td>\n                        </tr>\n                        <tr className=\"table-row\">\n                            <td className=\"attr-title\">Operating Cash Flow</td><td className=\"stat\">{this.props.operating_cash_flow}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profit_margin: state.stock_statistics.getProfitMargin(),\n        revenue: state.stock_statistics.getRevenue(),\n        revenue_growth: state.stock_statistics.getRevenueGrowth(),\n        gross_profit: state.stock_statistics.getGrossProfits(),\n        total_debt: state.stock_statistics.getTotalDebt(),\n        operating_cash_flow: state.stock_statistics.getOperatingCashflow()\n    }\n}\n\nexport default connect(mapStateToProps)(StockPerformance);","import React from 'react';\n\nconst Sector = props => {\n    return (\n        <div style={{display: \"inline-block\", borderRadius: 14, fontSize: 16, color: \"#186FAF\", backgroundColor: \"#DCEEFB\", padding: \"8px 32px\"}}>\n            {props.value}\n        </div>\n    );\n};\n\nexport default Sector;","import React from 'react';\n\nconst Industry = (props) => {\n    return (\n        <div style={{display: \"inline-block\", marginLeft: 24, borderRadius: 14, fontSize: 16, color: \"#51279B\", backgroundColor: \"#EAE2F8\", padding: \"8px 32px\"}}>\n            {props.value}\n        </div>\n    );\n};\n\nexport default Industry;","import React from 'react';\n\nconst Detail = (props) => {\n    return (\n        <div style={{color: \"#829AB1\", fontSize: 24, textAlign: \"center\", marginBottom: 32}}>\n            <div>{props.label}</div>\n            <div><b>{props.value}</b></div>\n        </div>\n    );\n};\n\nexport default Detail;","import React from 'react';\nimport Detail from './Detail.js';\n\nconst CompanyDetails = (props) => {\n    return (\n        <div>\n            <Detail label=\"# Full Time Employees\" value={props.num_employees} />\n            <Detail label=\"Location\" value={props.location} />\n            <Detail label=\"Website\" value={props.website} />\n        </div>\n    );\n};\n\nexport default CompanyDetails;","import React, { Fragment } from 'react';\nimport Sector from './Sector.js';\nimport Industry from './Industry.js';\nimport CompanyDetails from '../CompanyDetails/CompanyDetails';\nimport './About.css';\n\nconst About = props => {\n    return (\n        <div className=\"aboutContainer\">\n            <h2 className=\"aboutTitle\">About Company</h2>\n            <div className=\"descriptionAndDetails\">\n                <div className=\"stock-description\">\n                    <div style={{marginBottom: 24}}>\n                        <Sector value={props.sector} />\n                        <Industry value={props.industry} />\n                    </div>\n                    {props.description}\n                </div>\n                <div className=\"details\">\n                    <CompanyDetails num_employees={props.num_employees}\n                                    location={props.location}\n                                    website={props.website} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default About;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './PerformancePage.module.css';\nimport StockName from '../../containers/StockName/StockName';\nimport PerformancePlot from '../PerformancePlot/PerformancePlot';\nimport PriceIndicatorContainer from '../../containers/PriceIndicatorContainer/PriceIndicatorContainer';\nimport StockPerformance from '../StockPerformance/StockPerformance';\nimport About from '../../containers/About/About';\n\nclass PerformancePage extends Component {\n    render () {\n        return (\n            <div className={styles.PerformancePage}>\n                <span className={styles.pageWidth}>\n                <Fragment>\n                    <StockName symbol={this.props.symbol} full_name={this.props.fullname} />\n                    <div className={styles.topContainer}>\n                        <div style={{float: 'left', width: \"54%\"}}>\n                            <PerformancePlot />\n                        </div>\n                        <div style={{float: \"left\", width: \"46%\"}}>\n                            <PriceIndicatorContainer />\n                        </div>\n                    </div>\n                    <div style={{width: \"50%\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 72, marginBottom: 72}}>\n                        <StockPerformance/>\n                    </div>\n                    <div className={styles.fullWidth}>\n                        <About description={this.props.description} \n                               num_employees={this.props.num_employees}\n                               location={this.props.location}\n                               website={this.props.website}\n                               sector={this.props.sector}\n                               industry={this.props.industry} />\n                    </div>\n                </Fragment>\n                </span>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        fullname: state.stock_profile.getFullName(),\n        symbol: state.stock_profile.getStockSymbol(),\n        description: state.stock_profile.getBusinessSummary(),\n        num_employees: state.stock_profile.getNumEmployees(),\n        location: `${state.stock_profile.getCity()}, ${state.stock_profile.getState()}`,\n        website: state.stock_profile.getWebsite(),\n        sector: state.stock_profile.getSector(),\n        industry: state.stock_profile.getIndustry()\n    }\n}\n\nexport default connect(mapStateToProps)(PerformancePage);","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport PerformancePage from './components/PerformancePage/PerformancePage';\nimport { connect } from 'react-redux';\n\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <PerformancePage />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    search_text: state.search_text\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {actionTypes} from './actions';\nimport HistoricalStockData from \"../classes/HistoricalStockData\";\nimport StockStatistics from \"../classes/StockStatistics\";\nimport StockProfile from \"../classes/StockProfile\";\n\nexport const initialState = {\n    search_text: \"\",\n    chart_data: new HistoricalStockData(),\n    stock_statistics: new StockStatistics(),\n    stock_profile: new StockProfile(),\n    selected_stock_range: \"1d\"\n}\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_SEARCH_TEXT:\n            return {\n                ...state,\n                search_text: action.value\n            }\n        case actionTypes.UPDATE_SHOW_SEARCH_BAR:\n            return {\n                ...state,\n                show_comparison_seach_bar: action.value\n            \n            }\n        case actionTypes.UPDATE_STOCK_RANGE:\n            return {\n                ...state,\n                selected_stock_range: action.value\n            }\n        case actionTypes.UPDATE_CHART_DATA:\n            return {\n                ...state,\n                chart_data: action.chart_data,\n                selected_stock_range: action.selected_stock_range\n            }\n        case actionTypes.UPDATE_ALL_STOCK_INFO:\n            return {\n                ...state,\n                chart_data: action.chart_data,\n                stock_statistics: action.stock_statistics,\n                stock_profile: action.stock_profile\n            }\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware } from 'redux';\nimport * as serviceWorker from './serviceWorker';\nimport { rootReducer } from './store/reducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PerformancePage\":\"PerformancePage_PerformancePage__JvkPv\",\"pageWidth\":\"PerformancePage_pageWidth__mgrwf\",\"topContainer\":\"PerformancePage_topContainer__1-F-g\",\"fullWidth\":\"PerformancePage_fullWidth__2Q25t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBtn\":\"SearchBar_SearchBtn__3sT-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\"};"],"sourceRoot":""}